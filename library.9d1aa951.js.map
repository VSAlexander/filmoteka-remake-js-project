{"mappings":"oeAAAA,EAAA,SCEA,MAAMC,EAAgBC,SAASC,cAAc,YAE7C,SAASC,IACP,IAAIC,EACFC,KAAKC,MAAMC,aAAaC,QAAQ,mBAAqB,GACvDR,EAAcS,UAAYL,EACvBM,UACAC,KAAIC,GACI,4GAEoCA,EAAMC,yHAELD,EAAME,6DACRF,EAAMG,YAAYH,EAAMI,oDACnCJ,EAAMK,8FAGCL,EAAMM,2DACNN,EAAMO,4DACVP,EAAMG,0DACJH,EAAMQ,kEACAR,EAAMS,sEACRT,EAAMI,+CAI/CM,KAAK,IACRC,QAAQC,IAAI,uBACd,CAEAC,OAAOC,iBAAiB,WAAWC,IACf,kBAAdA,EAAMC,MACRL,QAAQC,IAAI,SACZrB,IACF,IAGFA,IAIA,MAAM0B,EAAa5B,SAAS6B,eAAe,cACrCC,EAAW9B,SAAS6B,eAAe,YACnCE,EAAc/B,SAASC,cAAc,wBACrC+B,EAAYhC,SAASC,cAAc,sBAGzC2B,EAAWK,UAAUC,IAAI,UACzBH,EAAYI,MAAMC,QAAU,OAC5BJ,EAAUG,MAAMC,QAAU,OAG1BR,EAAWH,iBAAiB,SAAS,KACnCG,EAAWK,UAAUC,IAAI,UACzBJ,EAASG,UAAUI,OAAO,UAC1BN,EAAYI,MAAMC,QAAU,OAC5BJ,EAAUG,MAAMC,QAAU,UCzD5B,IAAAE,EAAAxC,EAAA,SAEA,MAAMyC,EAAcvC,SAASC,cAAc,sBAE3C,SAASuC,IACP,IAAIC,EAAiBrC,KAAKC,MAAMC,aAAaC,QAAQ,iBAAmB,GACxEgC,EAAY/B,UAAYiC,GACpBhC,WACAC,KAAIC,GACG,4GAEoCA,EAAMC,yHAELD,EAAME,6DACRF,EAAMG,YAAYH,EAAMI,oDACnCJ,EAAMK,8FAGCL,EAAMM,2DACNN,EAAMO,4DACVP,EAAMG,0DACJH,EAAMQ,kEACAR,EAAMS,sEACRT,EAAMI,+CAI/CM,KAAK,GACV,CAIAG,OAAOC,iBAAiB,WAAWC,IACf,gBAAdA,EAAMC,MACRL,QAAQC,IAAI,SACZiB,IACF,IAGFA,IAIA,MAAME,EAAa1C,SAAS6B,eAAe,cACrCc,EAAW3C,SAAS6B,eAAe,YACnCe,EAAc5C,SAASC,cAAc,wBACrC4C,EAAY7C,SAASC,cAAc,sBAGzC0C,EAASlB,iBAAiB,SAAS,KACjCkB,EAASV,UAAUC,IAAI,UACvBQ,EAAWT,UAAUI,OAAO,UAC5BO,EAAYT,MAAMC,QAAU,OAC5BS,EAAUV,MAAMC,QAAU,UAI5BG,EAAYd,iBAAiB,SAASC,IACpC,MAAMoB,EAAYpB,EAAMqB,OAAOC,QAAQ,qBACnCF,IACF,EAAAR,EAAAW,WAAUH,EAAA,I","sources":["src/library.js","src/js/displayWatchedMovies.js","src/js/displayQueueMovies.js"],"sourcesContent":["import { movieModal } from './js/movieModal';\nimport { displayWatchedMovies } from './js/displayWatchedMovies';\nimport { displayQueueMovies } from './js/displayQueueMovies';\nimport { team } from './js/team';\nimport { spinner } from './js/spinner';\nimport { up } from './js/up';\n","// import { watchedMoviesArr } from './addToWatched';\n\nconst watchedListEl = document.querySelector('.watched');\n\nfunction displayWatchedMovies() {\n  let watchedMoviesArr =\n    JSON.parse(localStorage.getItem('watchedMovies')) || [];\n  watchedListEl.innerHTML = watchedMoviesArr\n    .reverse()\n    .map(movie => {\n      return `\n        <li class=\"movies-list__item\" data-modal-open>\n          <div class=\"movies-list__item-thumb\">${movie.image_thumb}</div>\n          <div class=\"movies-list__item-caption\">\n            <h2 class=\"movies-list__item-title\">${movie.title}</h2>\n            <p class=\"movies-list__item-info\">${movie.genres} | ${movie.release_date}\n              <span class=\"rating\">${movie.vote}</span>\n            </p>\n          </div>\n          <span class=\"vote_count hidden\">${movie.votes}</span>\n          <span class=\"popularity hidden\">${movie.popularity}</span>\n          <span class=\"genres hidden\">${movie.genres}</span>\n          <span class=\"overview hidden\">${movie.overview}</span>\n          <span class=\"original_title hidden\">${movie.original_title}</span>\n          <span class=\"release_date hidden\">${movie.release_date}</span>\n        </li>\n      `;\n    })\n    .join('');\n  console.log('Watched movies HTML:');\n}\n\nwindow.addEventListener('storage', event => {\n  if (event.key === 'watchedMovies') {\n    console.log('Hello');\n    displayWatchedMovies();\n  }\n});\n\ndisplayWatchedMovies();\n\n// Logic of choosing watchedList by clicking on watchedBtn\n\nconst watchedBtn = document.getElementById('watchedBtn');\nconst queueBtn = document.getElementById('queueBtn');\nconst watchedList = document.querySelector('.watched.movies-list');\nconst queueList = document.querySelector('.queue.movies-list');\n\n// Display the watched list by default\nwatchedBtn.classList.add('active');\nwatchedList.style.display = 'flex';\nqueueList.style.display = 'none';\n\n// Add event listeners to the watchedBtn\nwatchedBtn.addEventListener('click', () => {\n  watchedBtn.classList.add('active');\n  queueBtn.classList.remove('active');\n  watchedList.style.display = 'flex';\n  queueList.style.display = 'none';\n});\n\n//\n","// import { queueMoviesArr } from './addToQueue';\nimport { openModal, closeModal } from './movieModal';\n\nconst queueListEl = document.querySelector('.queue.movies-list');\n\nfunction displayQueueMovies() {\n  let queueMoviesArr = JSON.parse(localStorage.getItem('queueMovies')) || [];\n  queueListEl.innerHTML = queueMoviesArr\n    ?.reverse()\n    ?.map(movie => {\n      return `\n        <li class=\"movies-list__item\" data-modal-open>\n          <div class=\"movies-list__item-thumb\">${movie.image_thumb}</div>\n          <div class=\"movies-list__item-caption\">\n            <h2 class=\"movies-list__item-title\">${movie.title}</h2>\n            <p class=\"movies-list__item-info\">${movie.genres} | ${movie.release_date}\n              <span class=\"rating\">${movie.vote}</span>\n            </p>\n          </div>\n          <span class=\"vote_count hidden\">${movie.votes}</span>\n          <span class=\"popularity hidden\">${movie.popularity}</span>\n          <span class=\"genres hidden\">${movie.genres}</span>\n          <span class=\"overview hidden\">${movie.overview}</span>\n          <span class=\"original_title hidden\">${movie.original_title}</span>\n          <span class=\"release_date hidden\">${movie.release_date}</span>\n        </li>\n      `;\n    })\n    .join('');\n}\n\n// displayQueueMovies();\n\nwindow.addEventListener('storage', event => {\n  if (event.key === 'queueMovies') {\n    console.log('Hello');\n    displayQueueMovies();\n  }\n});\n\ndisplayQueueMovies();\n\n// Logic of choosing queueList by clicking on queueBtn\n\nconst watchedBtn = document.getElementById('watchedBtn');\nconst queueBtn = document.getElementById('queueBtn');\nconst watchedList = document.querySelector('.watched.movies-list');\nconst queueList = document.querySelector('.queue.movies-list');\n\n// Add event listeners to the queueBtn\nqueueBtn.addEventListener('click', () => {\n  queueBtn.classList.add('active');\n  watchedBtn.classList.remove('active');\n  watchedList.style.display = 'none';\n  queueList.style.display = 'flex';\n});\n\n// Modal logic\nqueueListEl.addEventListener('click', event => {\n  const movieCard = event.target.closest('[data-modal-open]');\n  if (movieCard) {\n    openModal(movieCard);\n  }\n});\n\n//\n\n// if (backdrop.classList.contains('is-hidden')) {\n//   displayQueueMovies();\n// }\n\n// The reason the modal window is not working\n// when I switch to the queue list is that I\n// am adding the click event listener for opening\n// the modal window to the movieList element. In my code,\n// the movieList element refers only to the movies list\n// in the watched list. When I switch to the queue list,\n// the movieList element still refers to the movies list\n// in the watched list, so the event listener is not applied\n// to the movies in the queue list.\n"],"names":["parcelRequire","$576ec8006ec3c80c$var$watchedListEl","document","querySelector","$576ec8006ec3c80c$var$displayWatchedMovies","watchedMoviesArr","JSON","parse","localStorage","getItem","innerHTML","reverse","map","movie","image_thumb","title","genres","release_date","vote","votes","popularity","overview","original_title","join","console","log","window","addEventListener","event","key","$576ec8006ec3c80c$var$watchedBtn","getElementById","$576ec8006ec3c80c$var$queueBtn","$576ec8006ec3c80c$var$watchedList","$576ec8006ec3c80c$var$queueList","classList","add","style","display","remove","$hzVFV","$ac4590dbaf31eb47$var$queueListEl","$ac4590dbaf31eb47$var$displayQueueMovies","queueMoviesArr","$ac4590dbaf31eb47$var$watchedBtn","$ac4590dbaf31eb47$var$queueBtn","$ac4590dbaf31eb47$var$watchedList","$ac4590dbaf31eb47$var$queueList","movieCard","target","closest","openModal"],"version":3,"file":"library.9d1aa951.js.map"}