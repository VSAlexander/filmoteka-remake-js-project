{"mappings":"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","sources":["src/js/addToWatched.js","src/js/addToQueue.js","src/js/movieModal.js","src/js/displayWatchedMovies.js","src/js/displayQueueMovies.js","src/js/footer.js","src/js/btnUp.js"],"sourcesContent":["import { closeModal } from './movieModal';\n\nconst modal = document.querySelector('[data-modal]');\nexport const addToWatchedBtn = modal.querySelector('.button-watched-modal');\nexport let watchedMoviesArr =\n  JSON.parse(localStorage.getItem('watchedMovies')) || [];\n\nfunction addToWatched() {\n  // values for movie card\n  const image_thumb = modal.querySelector('.image-thumb').innerHTML;\n  const title = modal.querySelector('.movie-header').textContent;\n  const release_date = modal.querySelector('.release_date-modal').textContent;\n  const vote = modal.querySelector('.vote').textContent;\n  const genres = modal.querySelector('.genres-modal').textContent;\n\n  // values for movie modal\n  const votes = modal.querySelector('.votes').textContent;\n  const popularity = modal.querySelector('.popularity-modal').textContent;\n  const overview = modal.querySelector('.overview-modal').textContent;\n  const original_title = modal.querySelector(\n    '.original_title-modal'\n  ).textContent;\n\n  const movieObj = {\n    image_thumb,\n    title,\n    release_date,\n    vote,\n    genres,\n    votes,\n    popularity,\n    overview,\n    original_title,\n  };\n  watchedMoviesArr.push(movieObj);\n  localStorage.setItem('watchedMovies', JSON.stringify(watchedMoviesArr));\n  addToWatchedBtn.textContent = 'Delete from watched';\n  addToWatchedBtn.removeEventListener('click', handleWatchedButtonClick);\n  addToWatchedBtn.addEventListener('click', handleDeleteWatchedButtonClick);\n}\n\nexport function handleWatchedButtonClick() {\n  addToWatched();\n\n  // dispatch custom event when movie is adding to watched list\n  const watchedAddEvent = new Event('watchedAdd');\n  window.dispatchEvent(watchedAddEvent);\n}\n\nexport function handleDeleteWatchedButtonClick() {\n  const title = modal.querySelector('.movie-header').textContent;\n  watchedMoviesArr = watchedMoviesArr.filter(movie => movie.title !== title);\n  localStorage.setItem('watchedMovies', JSON.stringify(watchedMoviesArr));\n  addToWatchedBtn.textContent = 'Add to watched';\n  addToWatchedBtn.removeEventListener('click', handleDeleteWatchedButtonClick);\n  addToWatchedBtn.addEventListener('click', handleWatchedButtonClick);\n\n  // dispatch custom event when movie is deleting from watched list\n  const watchedDeleteEvent = new Event('watchedDelete');\n  window.dispatchEvent(watchedDeleteEvent);\n\n  if (document.location.pathname === '/library.html') {\n    closeModal();\n  }\n}\n\naddToWatchedBtn.addEventListener('click', handleWatchedButtonClick);\n","import { closeModal } from './movieModal';\n\nconst modal = document.querySelector('[data-modal]');\nexport const addToQueueBtn = modal.querySelector('.button-queue-modal');\nexport let queueMoviesArr =\n  JSON.parse(localStorage.getItem('queueMovies')) || [];\n\nfunction addToQueue() {\n  // values for movie card\n  const image_thumb = modal.querySelector('.image-thumb').innerHTML;\n  const title = modal.querySelector('.movie-header').textContent;\n  const release_date = modal.querySelector('.release_date-modal').textContent;\n  const vote = modal.querySelector('.vote').textContent;\n  const genres = modal.querySelector('.genres-modal').textContent;\n\n  // values for movie modal\n  const votes = modal.querySelector('.votes').textContent;\n  const popularity = modal.querySelector('.popularity-modal').textContent;\n  const overview = modal.querySelector('.overview-modal').textContent;\n  const original_title = modal.querySelector(\n    '.original_title-modal'\n  ).textContent;\n\n  const movieObj = {\n    image_thumb,\n    title,\n    release_date,\n    vote,\n    genres,\n    votes,\n    popularity,\n    overview,\n    original_title,\n  };\n\n  queueMoviesArr.push(movieObj);\n  localStorage.setItem('queueMovies', JSON.stringify(queueMoviesArr));\n  addToQueueBtn.textContent = 'Delete from queue';\n  addToQueueBtn.removeEventListener('click', handleQueueButtonClick);\n  addToQueueBtn.addEventListener('click', handleDeleteQueueButtonClick);\n}\n\nexport function handleQueueButtonClick() {\n  addToQueue();\n\n  // dispatch custom event when movie is adding to queue list\n  const queueAddEvent = new Event('queueAdd');\n  window.dispatchEvent(queueAddEvent);\n}\n\nexport function handleDeleteQueueButtonClick() {\n  const title = modal.querySelector('.movie-header').textContent;\n  queueMoviesArr = queueMoviesArr.filter(movie => movie.title !== title);\n  localStorage.setItem('queueMovies', JSON.stringify(queueMoviesArr));\n  addToQueueBtn.textContent = 'Add to queue';\n  addToQueueBtn.removeEventListener('click', handleDeleteQueueButtonClick);\n  addToQueueBtn.addEventListener('click', handleQueueButtonClick);\n\n  // dispatch custom event when movie is deleting from queue list\n  const queueDeleteEvent = new Event('queueDelete');\n  window.dispatchEvent(queueDeleteEvent);\n\n  if (document.location.pathname === '/library.html') {\n    closeModal();\n  }\n}\n\naddToQueueBtn.addEventListener('click', handleQueueButtonClick);\n","import {\n  watchedMoviesArr,\n  addToWatchedBtn,\n  handleWatchedButtonClick,\n  handleDeleteWatchedButtonClick,\n} from './addToWatched';\n\nimport {\n  queueMoviesArr,\n  addToQueueBtn,\n  handleQueueButtonClick,\n  handleDeleteQueueButtonClick,\n} from './addToQueue';\n\nconst body = document.querySelector('body');\nconst backdrop = document.querySelector('.backdrop');\nconst movieList = document.querySelector('.movies-list');\n\nexport function openModal(movieCard) {\n  document.body.style.overflow = 'hidden';\n  body.classList.add('modal-open');\n  backdrop.classList.remove('is-hidden');\n\n  // extracting content from movie card elements\n  const thumb = movieCard.querySelector('.movies-list__item-thumb').innerHTML;\n  const title = movieCard.querySelector('.movies-list__item-title').textContent;\n  const votes = movieCard.querySelector('.vote_count').textContent;\n  const vote = movieCard.querySelector('.rating').textContent;\n  const popularity = movieCard.querySelector('.popularity').textContent;\n  const original_title = movieCard.querySelector('.original_title').textContent;\n  const genres = movieCard.querySelector('.genres').textContent;\n  const overview = movieCard.querySelector('.overview').textContent;\n  const release_date = movieCard.querySelector('.release_date').textContent;\n\n  // embedding this content into movie modal window elements\n  document.querySelector('.image-thumb').innerHTML = thumb;\n  document.querySelector('.movie-header').innerHTML = title;\n  document.querySelector('.vote').innerHTML = vote;\n  document.querySelector('.votes').innerHTML = votes;\n  document.querySelector('.popularity-modal').innerHTML = popularity;\n  document.querySelector('.original_title-modal').innerHTML = original_title;\n  document.querySelector('.genres-modal').innerHTML = genres;\n  document.querySelector('.overview-modal').innerHTML = overview;\n  document.querySelector('.release_date-modal').innerHTML = release_date;\n\n  // Check if the movie is already in the watched or queue list\n  const isInWatched = watchedMoviesArr.some(movie => movie.title === title);\n  const isInQueue = queueMoviesArr.some(movie => movie.title === title);\n\n  // Update the text content of the buttons and add corresponding listeners to them accordingly\n  if (isInWatched) {\n    addToWatchedBtn.textContent = 'Delete from watched';\n    addToWatchedBtn.addEventListener('click', handleDeleteWatchedButtonClick);\n  } else {\n    addToWatchedBtn.textContent = 'Add to watched';\n    addToWatchedBtn.addEventListener('click', handleWatchedButtonClick);\n  }\n  if (isInQueue) {\n    addToQueueBtn.textContent = 'Delete from queue';\n    addToQueueBtn.addEventListener('click', handleDeleteQueueButtonClick);\n  } else {\n    addToQueueBtn.textContent = 'Add to queue';\n    addToQueueBtn.addEventListener('click', handleQueueButtonClick);\n  }\n}\n\nmovieList.addEventListener('click', event => {\n  const movieCard = event.target.closest('[data-modal-open]');\n  if (movieCard) {\n    openModal(movieCard);\n  }\n});\n\nexport function closeModal() {\n  document.body.style.overflow = 'auto';\n  body.classList.remove('modal-open');\n  backdrop.classList.add('is-hidden');\n}\n\n// Add event listener to close the modal when the user clicks on modal close button or backdrop\ndocument.addEventListener('click', event => {\n  if (\n    event.target.matches('[data-modal-close]') ||\n    event.target.matches('.backdrop')\n  ) {\n    closeModal();\n  }\n});\n\n// Add event listener to close the modal when the user presses the ESC key\ndocument.addEventListener('keydown', event => {\n  if (body.classList.contains('modal-open') && event.key === 'Escape') {\n    closeModal();\n  }\n});\n","import { watchedMoviesArr } from './addToWatched';\n\nconst watchedListEl = document.querySelector('.watched');\n\nexport function displayWatchedMovies() {\n  if (watchedMoviesArr.length === 0) {\n    watchedListEl.innerHTML = `<h2 class='no-movies'>Nothing added to watched list yet</h2>`;\n    return;\n  }\n  watchedListEl.innerHTML = watchedMoviesArr\n    .reverse()\n    .map(movie => {\n      return `\n        <li class=\"movies-list__item\" data-modal-open>\n          <div class=\"movies-list__item-thumb\">${movie.image_thumb}</div>\n          <div class=\"movies-list__item-caption\">\n            <h2 class=\"movies-list__item-title\">${movie.title}</h2>\n            <p class=\"movies-list__item-info\">${movie.genres} | ${movie.release_date}\n              <span class=\"rating\">${movie.vote}</span>\n            </p>\n          </div>\n          <span class=\"vote_count hidden\">${movie.votes}</span>\n          <span class=\"popularity hidden\">${movie.popularity}</span>\n          <span class=\"genres hidden\">${movie.genres}</span>\n          <span class=\"overview hidden\">${movie.overview}</span>\n          <span class=\"original_title hidden\">${movie.original_title}</span>\n          <span class=\"release_date hidden\">${movie.release_date}</span>\n        </li>\n      `;\n    })\n    .join('');\n}\n\nwindow.addEventListener('watchedDelete', displayWatchedMovies); // if 'Delete from watched' button was pressed this event shoots and calls displayWatchedMovies()\nwindow.addEventListener('watchedAdd', displayWatchedMovies); // if 'Add to watched' button was pressed this event shoots and calls displayWatchedMovies()\n\ndisplayWatchedMovies();\n\n// Logic of choosing watchedList by clicking on watchedBtn\n\nconst watchedBtn = document.getElementById('watchedBtn');\nconst queueBtn = document.getElementById('queueBtn');\nconst watchedList = document.querySelector('.watched.movies-list');\nconst queueList = document.querySelector('.queue.movies-list');\n\n// Display the watched list by default\nwatchedBtn.classList.add('active');\nwatchedList.style.display = 'flex';\nqueueList.style.display = 'none';\n\n// Add event listeners to the watchedBtn\nwatchedBtn.addEventListener('click', () => {\n  watchedBtn.classList.add('active');\n  queueBtn.classList.remove('active');\n  watchedList.style.display = 'flex';\n  queueList.style.display = 'none';\n});\n","import { queueMoviesArr } from './addToQueue';\nimport { openModal } from './movieModal';\n\nconst queueListEl = document.querySelector('.queue.movies-list');\n\nfunction displayQueueMovies() {\n  if (queueMoviesArr.length === 0) {\n    queueListEl.innerHTML = `<h2 class='no-movies'>Nothing added to queue list yet</h2>`;\n    return;\n  }\n  queueListEl.innerHTML = queueMoviesArr\n    ?.reverse()\n    ?.map(movie => {\n      return `\n        <li class=\"movies-list__item\" data-modal-open>\n          <div class=\"movies-list__item-thumb\">${movie.image_thumb}</div>\n          <div class=\"movies-list__item-caption\">\n            <h2 class=\"movies-list__item-title\">${movie.title}</h2>\n            <p class=\"movies-list__item-info\">${movie.genres} | ${movie.release_date}\n              <span class=\"rating\">${movie.vote}</span>\n            </p>\n          </div>\n          <span class=\"vote_count hidden\">${movie.votes}</span>\n          <span class=\"popularity hidden\">${movie.popularity}</span>\n          <span class=\"genres hidden\">${movie.genres}</span>\n          <span class=\"overview hidden\">${movie.overview}</span>\n          <span class=\"original_title hidden\">${movie.original_title}</span>\n          <span class=\"release_date hidden\">${movie.release_date}</span>\n        </li>\n      `;\n    })\n    .join('');\n}\n\nwindow.addEventListener('queueDelete', displayQueueMovies); // if 'Delete from queue' button was pressed this event shoots and calls displayQueueMovies()\nwindow.addEventListener('queueAdd', displayQueueMovies); // if 'Add to queue' button was pressed this event shoots and calls displayQueueMovies()\n\ndisplayQueueMovies();\n\n// Logic of choosing queueList by clicking on queueBtn\n\nconst watchedBtn = document.getElementById('watchedBtn');\nconst queueBtn = document.getElementById('queueBtn');\nconst watchedList = document.querySelector('.watched.movies-list');\nconst queueList = document.querySelector('.queue.movies-list');\n\n// Add event listeners to the queueBtn\nqueueBtn.addEventListener('click', () => {\n  queueBtn.classList.add('active');\n  watchedBtn.classList.remove('active');\n  watchedList.style.display = 'none';\n  queueList.style.display = 'flex';\n});\n\n// Modal logic\nqueueListEl.addEventListener('click', event => {\n  const movieCard = event.target.closest('[data-modal-open]');\n  if (movieCard) {\n    openModal(movieCard);\n  }\n});\n\n// The reason the modal window is not working\n// when I switch to the queue list is that I\n// am adding the click event listener for opening\n// the modal window to the movieList element. In my code,\n// the movieList element refers only to the movies list\n// in the watched list. When I switch to the queue list,\n// the movieList element still refers to the movies list\n// in the watched list, so the event listener is not applied\n// to the movies in the queue list.\n","const footer = document.querySelector('.footer');\n\nlet lastScrollY = 0;\n\n// add a scroll event listener to the window\nwindow.addEventListener('scroll', () => {\n  // get the current scroll position\n  const currentScrollY = window.scrollY;\n\n  // check if the user has scrolled down or up\n  if (currentScrollY > lastScrollY) {\n    // user scrolled down, hide the footer\n    footer.classList.add('footer--hidden');\n  } else {\n    // user scrolled up, show the footer\n    footer.classList.remove('footer--hidden');\n  }\n\n  // update the last scroll position\n  lastScrollY = currentScrollY;\n});\n","const btnUp = document.querySelector('#btn-up');\n\nwindow.addEventListener('scroll', () => {\n  if (window.scrollY > window.innerHeight / 2) {\n    btnUp.classList.add('btn-up--active');\n  } else {\n    btnUp.classList.remove('btn-up--active');\n  }\n});\n\nbtnUp.addEventListener('click', () => {\n  window.scrollTo({\n    top: 0,\n    behavior: 'smooth',\n  });\n});\n"],"names":["$03bf350f108de963$var$modal","document","querySelector","$03bf350f108de963$export$6a1c8346f0dc84e9","$03bf350f108de963$export$7d6711a0efac1398","JSON","parse","localStorage","getItem","$03bf350f108de963$export$8617d07d84a05a0f","movieObj","innerHTML","textContent","push","setItem","stringify","removeEventListener","addEventListener","$03bf350f108de963$export$7eb90986ff642a6c","$03bf350f108de963$var$addToWatched","watchedAddEvent","Event","window","dispatchEvent","title","filter","movie","watchedDeleteEvent","location","pathname","$ccc271a2338f7cf1$export$3f6fecd573f3fa48","$c83eaf274b0ccdd7$var$modal","$c83eaf274b0ccdd7$export$3b451aea295509e7","$c83eaf274b0ccdd7$export$82639f14f0fd05ab","$c83eaf274b0ccdd7$export$9601765d195e476b","$c83eaf274b0ccdd7$export$33d5137ba2374050","$c83eaf274b0ccdd7$var$addToQueue","queueAddEvent","queueDeleteEvent","$ccc271a2338f7cf1$var$body","$ccc271a2338f7cf1$var$backdrop","$ccc271a2338f7cf1$export$a7f6cffb6b8ba11c","movieCard","body","style","overflow","classList","add","remove","thumb","votes","vote","popularity","original_title","genres","overview","release_date","isInWatched","some","isInQueue","event","target","closest","matches","contains","key","$576ec8006ec3c80c$var$watchedListEl","$576ec8006ec3c80c$export$7a9cf3c7f2b4f503","length","reverse","map","image_thumb","join","$576ec8006ec3c80c$var$watchedBtn","getElementById","$576ec8006ec3c80c$var$queueBtn","$576ec8006ec3c80c$var$watchedList","$576ec8006ec3c80c$var$queueList","display","$ac4590dbaf31eb47$var$queueListEl","$ac4590dbaf31eb47$var$displayQueueMovies","$ac4590dbaf31eb47$var$watchedBtn","$ac4590dbaf31eb47$var$queueBtn","$ac4590dbaf31eb47$var$watchedList","$ac4590dbaf31eb47$var$queueList","$a7e561c20ca0346d$var$footer","$a7e561c20ca0346d$var$lastScrollY","currentScrollY","scrollY","$a79690dbdfe55853$var$btnUp","innerHeight","scrollTo","top","behavior"],"version":3,"file":"library.8d311f41.js.map"}